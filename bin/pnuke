#!/usr/bin/env python
# -*- Mode: python -*-
#
# Usage: pnuke [OPTIONS] -h hosts.txt pattern
#
# Nukes all processes that match pattern running as user
# on the set of nodes in hosts.txt.
#
# Created: 16 August 2003
#
# $Id: pnuke 400 2008-10-12 11:48:28Z bnc $
#
import fcntl
import os
import signal
import subprocess
import sys
import threading

basedir, bin = os.path.split(os.path.dirname(os.path.abspath(sys.argv[0])))
sys.path.append("%s" % basedir)

from psshlib import psshutil
from psshlib.basethread import Task, ThreadPool
from psshlib.cli import common_parser, common_defaults

def option_parser():
    parser = common_parser()
    parser.usage = "%prog [OPTIONS] -h hosts.txt pattern"
    parser.epilog = "Example: pnuke -h hosts.txt -l irb2 java"
    return parser

def parse_args():
    parser = option_parser()
    defaults = common_defaults()
    parser.set_defaults(**defaults)
    opts, args = parser.parse_args()
    #switch to this?: if opts.timeout <= 0:
    if opts.timeout == -1:
        opts.timeout = None

    if len(args) < 1:
        parser.error('Pattern not specified.')

    if len(args) > 1:
        parser.error('Extra arguments given after the pattern.')

    if not opts.hosts:
        parser.error('Hosts not specified.')

    return opts, args

def do_pnuke(hosts, ports, users, pattern, opts):
    if opts.outdir and not os.path.exists(opts.outdir):
        os.makedirs(opts.outdir)
    if opts.errdir and not os.path.exists(opts.errdir):
        os.makedirs(opts.errdir)
    sem = threading.Semaphore(opts.par)
    threads = []
    for i in range(len(hosts)):
        sem.acquire()
        if opts.verbose:
            quietswitch = ""
        else:
            quietswitch = "-q"
        if opts.options:
            cmd = 'ssh -o \"%s\" %s -p %s -l %s %s \"kill -9 \`ps -ef | grep %s | grep %s | grep -v grep | awk \'{print \$2}\'\` >& /dev/null"' % (opts.options, hosts[i], ports[i], users[i], quietswitch, users[i], pattern)
        else:
            cmd = 'ssh %s -p %s -l %s %s \"kill -9 \`ps -ef | grep %s | grep %s | grep -v grep | awk \'{print \$2}\'\` >& /dev/null"' % \
                   (hosts[i], ports[i], users[i], quietswitch, users[i], pattern)
        t = BaseThread(hosts[i], ports[i], cmd, opts, sem)
        t.start()
        threads.append(t)
    for t in threads:
        t.join()

if __name__ == "__main__":
    subprocess._cleanup = lambda : None
    opts, args = parse_args()
    pattern = args[0]
    hosts, ports, users = psshutil.read_hosts(opts.hosts)
    psshutil.patch_users(hosts, ports, users, opts.user)
    signal.signal(signal.SIGCHLD, signal.SIG_DFL)
    os.setpgid(0, 0)
    do_pnuke(hosts, ports, users, pattern, opts)
